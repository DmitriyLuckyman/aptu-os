На мой взгляд, основная информация о машине для этой задачи - число ядер процессора.
Оно в моем случае равно 4.

Оптимальность M - понятие расплывчатое. Поэтому для каждого N из некоторого фиксированного набора
искалось лучшее M, а затем производилось усреднение. Получилось число между 4 и 5.
Т.е. та возможность, которая заложена в машине с 4 независимыми исполнителями операций(ядрами), действительно используется.
А дальнейшее увеличение в программе числа потоков, не подкрепленное железом, не имеет большого смысла.

О скорости выполнения однопоточной версии и многопоточной при М = 1:
* алгоритм применяется тот же самый, поэтому версия с threads проигрывает по причине затратности создания потока
